@model LibraryManagement.ViewModels.BookViewModel
@inject LibraryManagement.Utils.Services.ISubsidiaryService SubsidiaryService

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Book</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" asp-route-id="@Context.Request.Query["id"]">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Publisher" class="control-label"></label>
                <input asp-for="Publisher" class="form-control" />
                <span asp-validation-for="Publisher" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Authors" class="control-label"></label>
                <input asp-for="Authors" class="form-control" />
                <span asp-validation-for="Authors" class="text-danger"></span>
            </div>
            @*
            @for (int i = 0; i < Model.Stocks.Length; i++)
            {
                <div class="form-group">
                    <input type="hidden" asp-for="Stocks[i].SubsidiaryID" />
                    <div>@SubsidiaryService.getNamingById(Model.Stocks[i].SubsidiaryID)</div>
                    <div class="form-group">
                        @if (Model.Stocks[i].Error)
                        {
                            <span class="text-danger">Total cannot go below the number of borrowed books</span>
                        }
                        else
                        {
                            <span asp-validation-for="Stocks[i].Total" class="text-danger"></span>
                        }
                        <label asp-for="Stocks[i].Total" class="control-label"></label>
                        <input asp-for="Stocks[i].Total" class="form-control, d-inline-block" />
                    </div>
                </div>
            }
            <div class="form-group">
                <select class="form-control" asp-for="StockID" asp-items="ViewBag.Subsidiaries" onchange="this.form.submit()">
                    <option value="0">Add new stock</option>
                </select>
            </div>*@
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <button asp-action="Delete" class="btn btn-primary" asp-route-id="@Context.Request.Query["id"]">Delete</button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Cancel</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
